name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              git \
              zip \
              unzip \
              openjdk-8-jdk \
              python3-pip \
              autoconf \
              libtool \
              pkg-config \
              zlib1g-dev \
              libncurses5-dev \
              libtinfo6 \
              libncurses5 \
              libsqlite3-dev \
              libssl-dev \
              libgl1-mesa-dev \
              libgles2-mesa-dev \
              curl \
              wget

      - name: Install Android Command Line Tools
        run: |
          mkdir -p $ANDROID_HOME
          cd $ANDROID_HOME
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-*.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          rm commandlinetools-linux-*.zip

      - name: Configure Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir "urllib3<2"  # 修复requests兼容性问题
          pip install cython==0.29.36 buildozer==1.5.0

      - name: Configure buildozer.spec
        run: |
          # 确保文件编码正确
          sed -i 's/\r//' buildozer.spec
          
          # 关键配置修改
          sed -i '/^title = /c\title = RepairApp' buildozer.spec
          sed -i '/^package.name = /c\package.name = repairapp' buildozer.spec
          sed -i '/^package.domain = /c\package.domain = com.example' buildozer.spec
          sed -i '/^orientation = /c\orientation = portrait' buildozer.spec
          sed -i '/^requirements = /c\requirements = python3,kivy==2.2.1,requests==2.31.0,openssl,pyjnius,android' buildozer.spec
          sed -i '/^android.permissions = /c\android.permissions = INTERNET' buildozer.spec
          sed -i '/^android.api = /c\android.api = 33' buildozer.spec
          sed -i '/^android.ndk = /c\android.ndk = 25b' buildozer.spec
          sed -i '/^#android.accept_sdk_license = /c\android.accept_sdk_license = True' buildozer.spec
          sed -i '/^#android.sdk_path = /c\android.sdk_path = $ANDROID_HOME' buildozer.spec
          sed -i '/^#log_level = /c\log_level = 2' buildozer.spec

      - name: Install Android components
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          
          # 安装必要组件
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;34.0.0" \
            "ndk;25.2.9519653" \
            "cmake;3.22.1"

          # 设置环境变量
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Build APK
        run: |
          # 清理可能存在的临时文件
          find . -name "*.pyc" -delete
          rm -rf .buildozer
          
          # 执行构建
          buildozer -v android clean
          buildozer -v android debug

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: repair-app
          path: |
            bin/*.apk
            .buildozer/*.log
          retention-days: 5