# 修改后的关键步骤
- name: Initialize Python-for-Android
  run: |
    mkdir -p .buildozer/android/platform
    git clone https://github.com/kivy/python-for-android.git .buildozer/android/platform/python-for-android
    cd .buildozer/android/platform/python-for-android
    git checkout tags/v2023.09.16 -b ci-build
    
    # 手动创建 requirements.txt
    if [ ! -f "requirements.txt" ]; then
      echo "创建基础依赖清单..."
      cat > requirements.txt <<EOF
      appdirs==1.4.4
      colorama>=0.3.3
      sh>=1.12.14
      jinja2>=3.0.0
      EOF
    fi
    
    pip install -r requirements.txt

# 完整工作流文件
name: Build Android APK

on:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      NDK_VERSION: 25.2.9519653
      BUILD_TOOLS_VERSION: "34.0.0"
      TARGET_API: "33"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate requirements.txt
        run: |
          cat > requirements.txt <<EOF
          kivy==2.2.1
          requests==2.31.0
          pyjnius==1.6.1
          cryptography==42.0.5
          appdirs==1.4.4
          EOF

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              git zip unzip openjdk-8-jdk \
              python3-pip autoconf libtool pkg-config \
              zlib1g-dev libncurses5-dev \
              libssl-dev libffi-dev

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install "urllib3<2" cython==0.29.36 wheel==0.41.3
          pip install -r requirements.txt
          pip install buildozer==1.5.0

      - name: Configure buildozer.spec
        run: |
          [ -f buildozer.spec ] || buildozer init
          cat > buildozer.spec <<EOF
          [app]
          title = RepairApp
          package.name = repairapp
          package.domain = com.example
          source.dir = .
          version = 1.0.0
          requirements = python3,kivy==2.2.1,requests==2.31.0,pyjnius,cryptography,android
          android.api = 33
          android.minapi = 21
          android.sdk_path = $ANDROID_HOME
          android.ndk_path = $ANDROID_HOME/ndk/$NDK_VERSION
          android.build_tools = $BUILD_TOOLS_VERSION
          android.accept_sdk_license = True
          log_level = 2
          EOF

      - name: Setup Android SDK
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-*.zip
          rm commandlinetools-linux-*.zip
          mv cmdline-tools latest

          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-$TARGET_API" \
            "build-tools;$BUILD_TOOLS_VERSION" \
            "ndk;$NDK_VERSION"

      - name: Initialize Python-for-Android
        run: |
          mkdir -p .buildozer/android/platform
          git clone https://github.com/kivy/python-for-android.git .buildozer/android/platform/python-for-android
          cd .buildozer/android/platform/python-for-android
          git checkout tags/v2023.09.16 -b ci-build
          
          # 修复缺失的requirements.txt
          if [ ! -f "requirements.txt" ]; then
            echo "创建基础依赖清单..."
            cat > requirements.txt <<EOF
            appdirs==1.4.4
            colorama>=0.3.3
            sh>=1.12.14
            jinja2>=3.0.0
            EOF
          fi
          
          pip install -r requirements.txt

      - name: Build APK
        run: |
          buildozer -v android clean
          buildozer -v android debug

      - name: Verify artifacts
        run: |
          if [ ! -f "bin/*.apk" ]; then
            echo "APK生成失败！查看日志："
            cat .buildozer/android/platform/*.log
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: |
            bin/*.apk
            .buildozer/android/platform/*.log