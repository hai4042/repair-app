name: Build Android APK

on:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      NDK_VERSION: 25.2.9519653
      BUILD_TOOLS_VERSION: "34.0.0"
      TARGET_API: "33"
      P4A_TAG: "v2023.09.16"  # 使用实际存在的标签

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate requirements.txt
        run: |
          cat > requirements.txt <<EOF
          kivy==2.2.1
          requests==2.31.0
          openssl
          pyjnius
          android
          appdirs==1.4.4  # 显式添加缺失依赖
          EOF

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              git zip unzip openjdk-8-jdk \
              python3-pip autoconf libtool pkg-config \
              zlib1g-dev libncurses5-dev libssl-dev

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install "urllib3<2" cython==0.29.36
          pip install appdirs==1.4.4 buildozer==1.5.0

      - name: Setup Android SDK
        run: |
          mkdir -p $ANDROID_HOME
          cd $ANDROID_HOME
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-*.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          rm commandlinetools-linux-*.zip

          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-$TARGET_API" \
            "build-tools;$BUILD_TOOLS_VERSION" \
            "ndk;$NDK_VERSION"

      - name: Configure buildozer.spec
        run: |
          [ -f buildozer.spec ] || buildozer init
          # 使用绝对路径替换环境变量
          sed -i "s|^android.ndk = .*|android.ndk = 25.2.9519653|" buildozer.spec
          sed -i "s|^android.ndk_path = .*|android.ndk_path = $ANDROID_HOME/ndk/25.2.9519653|" buildozer.spec
          sed -i "s|^android.sdk_path = .*|android.sdk_path = $ANDROID_HOME|" buildozer.spec
          sed -i '/^#android.accept_sdk_license/c\android.accept_sdk_license = True' buildozer.spec

      - name: Initialize Python for Android
        run: |
          mkdir -p .buildozer/android/platform
          git clone --branch $P4A_TAG --depth 1 \
            https://github.com/kivy/python-for-android.git \
            .buildozer/android/platform/python-for-android
          
          # 验证克隆结果
          cd .buildozer/android/platform/python-for-android
          git describe --tags

      - name: Verify NDK installation
        run: |
          echo "NDK路径: $ANDROID_HOME/ndk/$NDK_VERSION"
          ls -l $ANDROID_HOME/ndk/

      - name: Build APK
        run: |
          # 强制清理旧构建
          rm -rf .buildozer/android/platform/build-*
          
          buildozer -v android clean
          buildozer -v android debug

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: bin/*.apk